from flask import Flask, request, jsonify
import csv

app = Flask(__name__)

# Read data from CSV file
def read_csv_data(file_path):
    cve_data = []
    with open(file_path, 'r', newline='', encoding='utf-8') as csvfile:
        csvreader = csv.DictReader(csvfile)
        for row in csvreader:
            cve_data.append(row)
    return cve_data


# Path to your CSV file
CSV_FILE_PATH = 'C:\\yakuta\\Cybersecurity\\CVE_DATABASE - CVE_DATABASE.csv'

# Read data from CSV file
cve_data = read_csv_data(CSV_FILE_PATH)

# Endpoint to retrieve details of a particular CVE by its ID
@app.route('/cve/<cve_id>', methods=['GET'])
def get_cve_by_id(cve_id):
    for cve in cve_data:
        if cve['cve_id'] == cve_id:
            return jsonify(cve)
    return jsonify({"error": "CVE not found"}), 404

# Endpoint to retrieve all CVE data from the database
@app.route('/cve/all', methods=['GET'])
def get_all_cves():
    return jsonify(cve_data)

# Endpoint to add a new CVE record to the database
@app.route('/cve/addCVE', methods=['POST'])
def add_cve():
    new_cve = request.json
    cve_data.append(new_cve)
    return jsonify({"message": "CVE added successfully"})

# Endpoint to delete a CVE record identified by its CVE-ID
@app.route('/cve/<cve_id>', methods=['DELETE'])
def delete_cve(cve_id):
    for cve in cve_data:
        if cve['cve_id'] == cve_id:
            cve_data.remove(cve)
            return jsonify({"message": "CVE deleted successfully"})
    return jsonify({"error": "CVE not found"}), 404

# Endpoint to modify the details of a CVE identified by its ID
@app.route('/cve/<cve_id>', methods=['PUT'])
def update_cve(cve_id):
    for cve in cve_data:
        if cve['cve_id'] == cve_id:
            updated_data = request.json
            cve.update(updated_data)
            return jsonify({"message": "CVE updated successfully"})
    return jsonify({"error": "CVE not found"}), 404

if __name__ == '__main__':
    app.run(debug=True)
